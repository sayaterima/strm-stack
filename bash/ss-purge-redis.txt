#!/bin/bash

####################################################################################################
#### author: SlickStack ############################################################################
#### link: https://slickstack.io ###################################################################
#### mirror: https://mirrors.slickstack.io/bash/ss-purge-redis.txt #################################
#### path: /var/www/ss-purge-redis #################################################################
#### destination: n/a (not a boilerplate) ##########################################################
#### purpose: Clears the Redis server cache by way of the redis-cli flushall command ###############
#### module version: Redis 5.0.x ###################################################################
#### sourced by: ss-purge, ss core bash scripts ####################################################
#### bash aliases: ss purge [clear] redis, ss purge [clear] caches redis ###########################
####################################################################################################

## RUNNING SS-PURGE DURING TRAFFIC SPIKES MIGHT CAUSE SUDDEN STRESS TO SERVER RESOURCES ##
## KEEP IN MIND THAT FASTCGI CACHE IS DISABLED ALREADY ON STAGING SUBDIRECTORIES ##

## source ss-config ##
source /var/www/ss-config

## source ss-functions ##
source /var/www/ss-functions

## BELOW THIS RELIES ON SS-CONFIG AND SS-FUNCTIONS

####################################################################################################
#### TABLE OF CONTENTS (SS-Purge-Redis) ############################################################
####################################################################################################

## this is a brief summary of the different code snippets you will find in this script ##
## each section should be commented so you understand what is being accomplished ##

## A. Touch Timestamp File
## B. Message (Begin Script)

####################################################################################################
#### A. SS-Purge-Redis: Touch Timestamp File #######################################################
####################################################################################################

## this is a dummy timestamp file that will remember the last time this script was run ##
## it can be useful for developer reference and is sometimes used by SlickStack ##

## script timestamp ##
ss_touch "${TIMESTAMP_SS_PURGE_REDIS}"

####################################################################################################
#### B. SS-Purge-Redis: Message (Begin Script) #####################################################
####################################################################################################

## this is a simple message that announces to the shell the purpose of this bash script ##
## it will only be noticed by sudo users who manually call ss core bash scripts ##

## echo message ##
ss_echo "${COLOR_INFO}Running ss-purge-redis... ${COLOR_RESET}"

####################################################################################################
#### SS-Purge: Flush Redis (Object Cache i.e. Transients) ##########################################
####################################################################################################

## when a persistent object cache is installed in WordPress it retains all WP transients ##
## therefore flushing Redis is similar to manually deleting WP transients in MySQL ##

if [[ "${SS_APP}" != "mysql" ]]; then

## flush Redis object cache using redis-cli ##
redis-cli flushall > /dev/null 2>&1

fi

####################################################################################################
#### PLACEHOLDER: Reset Permissions (SlickStack Scripts) ###########################################
####################################################################################################

## we include this permissions reset in all cron jobs and bash scripts for redundancy ##
## chmod 0700 means only the root/sudo users can execute any SlickStack scripts ##

## THIS SNIPPET DOES NOT RELY ON SS-CONFIG OR SS-FUNCTIONS
## SNIPPET: ss bash scripts, ss cron jobs
## UPDATED: 02JUL2022

chown root:root /var/www/ss* ## must be root:root
chown root:root /var/www/crons/*cron* ## must be root:root
chown root:root /var/www/crons/custom/*cron* ## must be root:root
chmod 0700 /var/www/ss* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/*cron* ## 0700 means only root/sudo can execute
chmod 0700 /var/www/crons/custom/*cron* ## 0700 means only root/sudo can execute

####################################################################################################
#### SlickStack: External References Used To Improve This Script (Thanks, Interwebz) ###############
####################################################################################################

## Ref: https://www.php.net/manual/en/function.opcache-reset.php#121513
## Ref: https://stackoverflow.com/questions/5506913/bash-script-to-run-php-script
## Ref: https://coderwall.com/p/yrqrkw/delete-all-existing-wordpress-transients-in-mysql-database
## Ref: https://stackoverflow.com/questions/10422574/can-i-remove-transients-in-the-wp-options-table-of-my-wordpress-install
## Ref: https://wordpress.stackexchange.com/questions/73477/is-there-any-danger-in-deleting-all-transients
## Ref: https://stackoverflow.com/questions/20033648/how-to-run-mysql-command-on-bash
## Ref: https://serverfault.com/questions/337818/how-to-force-mysql-to-connect-by-tcp-instead-of-a-unix-socket
## Ref: https://stackoverflow.com/questions/33067909/bash-variable-under-a-mysql-query
## Ref: https://dev.mysql.com/doc/refman/5.7/en/examples.html
## Ref: https://stackoverflow.com/questions/25044817/zend-opcache-opcache-enable-cli-1-or-0-what-does-it-do#comment91052089_35880017
## Ref: https://codex.wordpress.org/Class_Reference/WP_Object_Cache
## Ref: https://pressidium.com/blog/2017/wordpress-object-caching-redis-memcached-and-native-apis/
## Ref: https://pressjitsu.com/blog/transient-cache-alternatives/
## Ref: https://unix.stackexchange.com/questions/87258/delete-all-files-except-in-a-certain-subdirectory-with-find
## Ref: https://github.com/littlebizzy/slickstack/issues/57
## Ref: https://stackoverflow.com/questions/6851909/how-do-i-delete-everything-in-redis
## Ref: https://wordpress.stackexchange.com/questions/383794/do-wordpress-crons-clean-up-expired-transients

## SS_EOF
